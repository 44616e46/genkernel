# Copyright 1999-2019 Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

MY_PV="${PV//./_}"
S="${WORKDIR}/boost_${MY_PV}/tools/build/src"
QA_IGNORE_DYNAMICALLY_LINKED_PROGRAM='(bjam|b2)$'

src_prepare() {
	default

	# Force regeneration
	rm engine/jambase.c \
		|| die "Failed to remove 'engine/jambase.c'!"

	# This patch allows us to fully control optimization
	# and stripping flags when bjam is used as build-system
	# We simply extend the optimization and debug-symbols feature
	# with empty dummies called 'none'
	sed -i \
		-e 's/\(off speed space\)/\1 none/' \
		-e 's/\(debug-symbols      : on off\)/\1 none/' \
		tools/builtin.jam \
		|| die "sed failed"
}

src_compile() {
	cd engine || die "Failed to chdir to '${S}/engine'!"

	local myargs=(
		./build.sh
		cc
		-d+2
		--without-python
	)

	CC=$(tc-getBUILD_CC) gkexec "${myargs[*]}"
}

src_install() {
	mkdir -p "${D}"/usr/bin \
		|| die "Failed to create '${D}/usr/bin'!"

	cp --target-directory="${D}/usr/bin" engine/bin.*/{bjam,b2} \
		|| die "Failed to install 'engine/bin.*/{bjam,b2}' to '${D}/usr/bin'!"

	mkdir -p "${D}"/usr/share/boost-build \
		|| die "Failed to create '${D}/usr/share/boost-build'!"

	cp \
		--recursive \
		--target-directory="${D}/usr/share/boost-build" \
		../boost-build.jam \
		bootstrap.jam \
		build-system.jam \
		../example/user-config.jam \
		build \
		kernel \
		options \
		tools \
		util \
		|| die "Failed to copy *.jam files to '${D}/usr/share/boost-build'!"

	find "${D}/usr/share/boost-build" -iname "*.py" -delete \
		|| die "Failed to remove python files"

	echo 'variant gentoorelease : release : <optimization>none <debug-symbols>none <runtime-link>shared ;' > "${D}/usr/share/boost-build/site-config.jam" \
		|| die "Failed to create '${D}/usr/share/boost-build/site-config.jam'!"
}
